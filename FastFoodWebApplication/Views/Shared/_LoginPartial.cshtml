@using Microsoft.AspNetCore.Identity
@using FastFoodWebApplication.Models
@using Microsoft.EntityFrameworkCore;
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject FastFoodWebApplication.Data.FastFoodWebApplicationContext DBContext

@* @{
    var avatar = "/images/user1.jpg";
    var user = await Context.Users.Include(u => u.Profile).SingleOrDefaultAsync(u => u.UserName == User.Identity.Name);
    if (user != null && user.Profile != null)
    {
        if (user.Profile.Avatar != null)
        {
            string img = user.Profile.Avatar.Replace("\\", "/");
            avatar = "/" + img;
        }
    }
} *@
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = DBContext.Users.Include(x => x.Profile).SingleOrDefault(x => x.UserName == User.Identity.Name);
        <li class="nav-item">
            <a id="manage" class="nav-link " asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @(user.Profile != null ? (user.Profile.FullName) : (user.UserName))!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" id="register" asp-controller="Account" asp-action="Register" style="color:white">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="login" asp-controller="Account" asp-action="Login" style="color:white">Login</a>
        </li>
    }
</ul>
